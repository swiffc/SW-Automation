# GitHub Action: Auto-Organize Files
# Runs on every push to check if files are in correct locations

name: Auto-Organize Files

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  organize:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Check file organization
      shell: powershell
      run: |
        Write-Host "Checking file organization..." -ForegroundColor Cyan
        
        # Check for files that should be organized
        $allowedRootFiles = @("README.md", "README_START_HERE.md", "GETTING_STARTED.md", "FOLDER_STRUCTURE.md", "UNIFIEDUI_BUNDLE_INTEGRATION_GUIDE.md", ".gitignore", "Solidworks Automation.sln")
        
        $rootFiles = Get-ChildItem -Path . -File | Where-Object {
          $_.Name -notin $allowedRootFiles
        }
        
        if ($rootFiles.Count -gt 0) {
          Write-Host "WARNING: Files found in root that might need organizing:" -ForegroundColor Yellow
          $rootFiles | ForEach-Object { Write-Host "  - $($_.Name)" -ForegroundColor Yellow }
          Write-Host "This is informational only - not blocking the workflow" -ForegroundColor Gray
        } else {
          Write-Host "Root directory is clean!" -ForegroundColor Green
        }
        
        # Check that key folders exist
        $requiredFolders = @("docs", "scripts", "UnifiedUI", "Bundle", "FileTools")
        $allExist = $true
        
        foreach ($folder in $requiredFolders) {
          if (Test-Path $folder) {
            Write-Host "  ? $folder exists" -ForegroundColor Green
          } else {
            Write-Host "  ? $folder missing" -ForegroundColor Red
            $allExist = $false
          }
        }
        
        if ($allExist) {
          Write-Host "`n? All files properly organized!" -ForegroundColor Green
        } else {
          Write-Host "`n? Some required folders are missing!" -ForegroundColor Red
          exit 1
        }

